stages:
  - lint
  - test
  - release

variables:
  DOCKER_IMAGE: alpine:latest

.default-tags:
  tags:
    - docker-runner

pre-commit:
  stage: lint
  extends: .default-tags
  image: python:3.12
  variables:
    PRE_COMMIT_HOME: ${CI_PROJECT_DIR}/.cache/pre-commit
  before_script:
    - curl -LsSf https://astral.sh/uv/install.sh | sh
    - export PATH="$HOME/.local/bin:$PATH"
    - git config --global user.email "ci-runner@gitlab.com"
    - git config --global user.name "GitLab CI"
    - git remote set-url origin "http://project_9_bot:${ADEF_INTG_TOKEN}@git.icf.gob.hn/alopez/adef-integ-tools.git"
    - git checkout $CI_COMMIT_REF_NAME
  script:
    - uv venv .venv
    - source .venv/bin/activate
    - uv pip install pre-commit
    - pre-commit install
    - pre-commit run -a || true
    - |
      if [ -n "$CI_MERGE_REQUEST_IID" ]; then
        git diff --quiet || (git add -u && git commit -m "Auto-format with pre-commit")
        git pull --rebase origin $CI_COMMIT_REF_NAME || true
        git push origin HEAD:$CI_COMMIT_REF_NAME
      fi
  cache:
    key: "$CI_COMMIT_REF_SLUG"
    paths:
      - ".venv/"
      - ${PRE_COMMIT_HOME}
    policy: pull-push
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      allow_failure: false

include:
  - template: Security/SAST.gitlab-ci.yml
  - template: Security/Container-Scanning.gitlab-ci.yml
  - template: Security/Secret-Detection.gitlab-ci.yml

sast:
  tags: [docker-runner]

container_scanning:
  tags: [docker-runner]
  variables:
    CS_DEFAULT_BRANCH_IMAGE: $CI_REGISTRY_IMAGE/$CI_DEFAULT_BRANCH:$CI_COMMIT_SHA

secret_detection:
  tags: [docker-runner]

release-placeholder:
  stage: release
  extends: .default-tags
  image: python:3.12
  before_script:
    - curl -LsSf https://astral.sh/uv/install.sh | sh
    - export PATH="$HOME/.local/bin:$PATH"
  script:
    - echo "$CI_COMMIT_TAG"
    - echo "Aquí podrías empaquetar, generar changelogs, etc."
  rules:
    - if: '$CI_COMMIT_TAG'  # se ejecuta solo cuando hay un tag
