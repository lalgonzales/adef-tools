stages:
- lint
- test
- release
- build
- deploy
- auto-bump
variables:
  DOCKER_IMAGE: alpine:latest
  UV_LINK_MODE: copy
  GIT_DEPTH: 0
default:
  tags:
  - docker-runner
include:
  - local: ".gitlab/templates/auto-bump.yml"
  - local: ".gitlab/templates/test.yml"
  - local: ".gitlab/templates/deploy.yml"
  - template: Jobs/Secret-Detection.gitlab-ci.yml
  - component: $CI_SERVER_FQDN/components/sast/sast@3.0.1
  - component: $CI_SERVER_FQDN/components/secret-detection/secret-detection@main
    inputs:
      enable_mr_pipelines: true
  # - component: $CI_SERVER_FQDN/components/code-quality-oss/pylint@main
  - component: $CI_SERVER_FQDN/components/to-be-continuous/pre-commit/gitlab-ci-pre-commit@main
    inputs:
      pre-commit-image: python:3.13-alpine
      pre-commit-file: .pre-commit-config.yaml
      pre-commit-token-protected: $CI_PROTECTED_TOKEN
      pre-commit-token-unprotected: $CI_NOPROTECTED_TOKEN
test:matrix:
  extends:
  - ".test-template"
  parallel:
    matrix:
    - PYTHON_VERSION: '3.10'
    - PYTHON_VERSION: '3.11'
    - PYTHON_VERSION: '3.12'
    - PYTHON_VERSION: '3.13'
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH == "main"'
    - if: '$CI_COMMIT_TAG'
auto-bump:
  extends: ".auto-bump-template"
  variables:
    GIT_USER_EMAIL: ci-runner@icf.gob.hn
    GIT_USER_NAME: ICF CI Runner
    DEFAULT_BRANCH: main
    GIT_BOT_USER: "${CI_PROTECTED_BOT_USER}"
    GIT_TOKEN_VAR: CI_PROTECTED_TOKEN
    GIT_REPO_URL: https://${CI_PROTECTED_BOT_USER}:${CI_PROTECTED_TOKEN}@${CI_SERVER_HOST}/${CI_PROJECT_PATH}.git
  dependencies:
  - test:matrix
upload_twine:
  extends:
  - ".deploy-template"
  variables:
    GIT_USER_EMAIL: ci-runner@icf.gob.hn
    GIT_USER_NAME: ICF CI Runner
    DEFAULT_BRANCH: main
    GIT_BOT_USER: "${CI_PROTECTED_BOT_USER}"
    GIT_TOKEN_VAR: CI_PROTECTED_TOKEN
    GIT_REPO_URL: https://${CI_PROTECTED_BOT_USER}:${CI_PROTECTED_TOKEN}@${CI_SERVER_HOST}/${CI_PROJECT_PATH}.git
    PACKAGE_NAME: adef-tools
    DIST_DIR: dist
    GITLAB_API: https://git.icf.gob.hn/api/v4
  dependencies:
  - test:matrix
  script:
  - uv pip install twine
  - uv build
  - TWINE_PASSWORD=${CI_JOB_TOKEN} TWINE_USERNAME=gitlab-ci-token twine upload --repository-url
    ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi dist/*
  # - TWINE_USERNAME=${PYPI_USERNAME} TWINE_PASSWORD=${PYPI_PASSWORD} twine upload dist/*
  rules:
  - if: "$CI_COMMIT_TAG"
    when: always
sync_to_github:
  stage: deploy
  image: docker.io/python:3.13
  before_script:
  - curl -LsSf https://astral.sh/uv/install.sh | sh
  - export PATH="$HOME/.local/bin:$PATH"
  - uv venv
  - source .venv/bin/activate
  - uv pip install git-filter-repo
  - git config --global user.email "alopez@icf.gob.hn"
  - git config --global user.name "Luis Alfredo LÃ³pez Gonzales"
  script:
  - git clone --branch=main https://$CI_SERVER_HOST/$CI_PROJECT_PATH.git repo-filtered
  - cd repo-filtered
  - git filter-repo --path workflows/data/ --invert-paths
  - git remote add github https://${GITHUB_TOKEN}@github.com/lalgonzales/adef-tools.git
  - git push --force github main
  only:
  - main
create-release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  script: echo "Creating release $CI_COMMIT_TAG for adef-tools"
  rules:
    - if: $CI_COMMIT_TAG
  release:
    tag_name: $CI_COMMIT_TAG
    description: "Release $CI_COMMIT_TAG of components in $CI_PROJECT_PATH"
create-pages:
  stage: deploy
  image: docker.io/python:3.13
  before_script:
  - curl -LsSf https://astral.sh/uv/install.sh | sh
  - export PATH="$HOME/.local/bin:$PATH"
  - uv venv
  - source .venv/bin/activate
  script:
  - uv sync --group pages
  - uv pip install mkdocs-material-extensions
  - mkdocs build -d public
  pages: true
  rules:
  - if: '$CI_COMMIT_BRANCH == "main"'
test-pages:
  stage: test
  image: docker.io/python:3.13
  before_script:
  - curl -LsSf https://astral.sh/uv/install.sh | sh
  - export PATH="$HOME/.local/bin:$PATH"
  - uv venv
  - source .venv/bin/activate
  script:
  - uv sync --group pages
  - mkdocs build -d test-site
  artifacts:
    paths:
    - test-site
  rules:
  - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
