stages:
  - lint
  - test
  - release
  - build
  - deploy
  - auto-bump

variables:
  DOCKER_IMAGE: alpine:latest
  UV_LINK_MODE: copy
  GIT_DEPTH: 0

.default-tags:
  tags:
    - docker-runner

pre-commit:
  stage: lint
  extends: .default-tags
  image: docker.io/python:3.12
  variables:
    PRE_COMMIT_HOME: ${CI_PROJECT_DIR}/.cache/pre-commit
  before_script:
    - curl -LsSf https://astral.sh/uv/install.sh | sh
    - export PATH="$HOME/.local/bin:$PATH"
    - git config --global user.email "ci-runner@gitlab.com"
    - git config --global user.name "GitLab CI"
    - git remote set-url origin "https://project_9_bot:${ADEF_INTG_TOKEN}@git.icf.gob.hn/alopez/adef-tools.git"
  script:
    - uv venv
    - source .venv/bin/activate
    - uv pip install pre-commit
    - pre-commit install
    - pre-commit run -a || true
    - |
      if [ -n "$CI_MERGE_REQUEST_IID" ]; then
        git diff --quiet || (git add -u && git commit -m "Auto-format with pre-commit")
        # git pull --rebase origin $CI_COMMIT_REF_NAME || true
        git push origin HEAD:$CI_COMMIT_REF_NAME
      fi
  cache:
    key: "$CI_COMMIT_REF_SLUG"
    paths:
      - ".venv/"
      - ${PRE_COMMIT_HOME}
    policy: pull-push
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      allow_failure: false

include:
  - template: Security/SAST.gitlab-ci.yml
  - template: Security/Container-Scanning.gitlab-ci.yml
  - template: Security/Secret-Detection.gitlab-ci.yml

sast:
  tags: [docker-runner]

container_scanning:
  tags: [docker-runner]
  variables:
    CS_DEFAULT_BRANCH_IMAGE: $CI_REGISTRY_IMAGE/$CI_DEFAULT_BRANCH:$CI_COMMIT_SHA

secret_detection:
  tags: [docker-runner]

.test-template: &test-template
  stage: test
  extends: .default-tags
  image: docker.io/python:${PYTHON_VERSION}
  before_script:
    - pip install uv
    - uv venv
    - uv sync --index-strategy unsafe-best-match
  script:
    - uv run python -c "import adef_tools; print('adef-tools import successful')"

test:matrix:
  parallel:
    matrix:
      - PYTHON_VERSION: "3.10"
      - PYTHON_VERSION: "3.11"
      - PYTHON_VERSION: "3.12"
      - PYTHON_VERSION: "3.13"
  <<: *test-template

upload_twine:
  stage: deploy
  extends: .default-tags
  image: python:3.12
  variables:
    PACKAGE_NAME: "adef-tools"
    DIST_DIR: "dist"
    GITLAB_API: "https://git.icf.gob.hn/api/v4"
  before_script:
    - curl -LsSf https://astral.sh/uv/install.sh | sh
    - export PATH="$HOME/.local/bin:$PATH"
    - git config --global user.email "ci-runner@gitlab.com"
    - git config --global user.name "GitLab CI"
    - git remote set-url origin "http://project_9_bot:${CI_TAG_REL_TOKEN}@git.icf.gob.hn/alopez/adef-tools.git"
    - uv venv
    - source .venv/bin/activate
  dependencies:
    - test:matrix
  script:
    - uv pip install twine
    - uv build

    - TWINE_PASSWORD=${CI_JOB_TOKEN} TWINE_USERNAME=gitlab-ci-token twine upload --repository-url ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi dist/*

    - TWINE_USERNAME=${PYPI_USERNAME} TWINE_PASSWORD=${PYPI_PASSWORD} twine upload dist/*
  rules:
    - if: '$CI_COMMIT_TAG'
      when: always

auto-bump:
  stage: auto-bump
  extends: .default-tags
  image: python:3.9
  before_script:
    - curl -LsSf https://astral.sh/uv/install.sh | sh
    - export PATH="$HOME/.local/bin:$PATH"
    - git config --global user.email "ci-runner@gitlab.com"
    - git config --global user.name "GitLab CI"
    - git remote set-url origin "http://project_9_bot:${CI_TAG_REL_TOKEN}@git.icf.gob.hn/alopez/adef-tools.git"
    - uv venv
    - source .venv/bin/activate
    - uv pip install -U commitizen
    - uv pip install -U cz-changeup
  dependencies:
    - test:matrix
  script:
    - |
      set -e
      NEXT_TAG=$(cz bump --get-next 2>&1) || true
      if echo "$NEXT_TAG" | grep -q '\[NO_COMMITS_TO_BUMP\]'; then
        echo "No commits elegibles para bump. Saliendo exitosamente."
        exit 0
      fi
      NEXT_TAG="v$NEXT_TAG"
      git tag -d "$NEXT_TAG" || true
      if git show-ref --verify --quiet refs/heads/main; then git branch -D main; fi
      git checkout main
      cz bump --yes
      git push origin main:$CI_COMMIT_REF_NAME
      TAG=v$(cz version -p)
      echo "#!/bin/sh" > variables
      echo "export TAG='$TAG'" >> variables
      git push origin --tags
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" && $CI_COMMIT_MESSAGE !~ /bump:/'

  artifacts:
    paths:
      - variables

sync_to_github:
  stage: deploy
  extends: .default-tags
  image: docker.io/python:3.12
  before_script:
    - curl -LsSf https://astral.sh/uv/install.sh | sh
    - export PATH="$HOME/.local/bin:$PATH"
    - uv venv
    - source .venv/bin/activate
    - uv pip install git-filter-repo
    - git config --global user.email "alopez@icf.gob.hn"
    - git config --global user.name "Luis Alfredo LÃ³pez Gonzales"
  script:
    - git clone --branch=main https://$CI_SERVER_HOST/$CI_PROJECT_PATH.git repo-filtered
    - cd repo-filtered
    - git filter-repo --path workflows/data/ --invert-paths
    - git remote add github https://${GITHUB_TOKEN}@github.com/lalgonzales/adef-tools.git
    - git push --force github main
  only:
    - main
