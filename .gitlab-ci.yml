stages:
  - lint
  - test
  - release
  - build
  - deploy
  - auto-bump

variables:
  DOCKER_IMAGE: alpine:latest
  UV_LINK_MODE: copy
  GIT_DEPTH: 0

default:
  tags:
    - docker-runner

include:
  - local: '.gitlab/templates/pre-commit.yml'
  - local: '.gitlab/templates/auto-bump.yml'
  - local: '.gitlab/templates/test.yml'
  - local: '.gitlab/templates/deploy.yml'
  - template: Code-Quality.gitlab-ci.yml
  - template: Security/SAST.gitlab-ci.yml
  - template: Security/Secret-Detection.gitlab-ci.yml

pre-commit:
  extends: .pre-commit-template
  variables:
    GIT_USER_EMAIL: "ci-runner@icf.gob.hn"
    GIT_USER_NAME: "ICF CI Runner"

    # Bot user and token configuration
    GIT_BOT_USER: "${CI_NOPROTECTED_BOT_USER}"
    GIT_TOKEN_VAR: "CI_NOPROTECTED_TOKEN"
    GIT_REPO_URL: "https://${CI_NOPROTECTED_BOT_USER}:${CI_NOPROTECTED_TOKEN}@${CI_SERVER_HOST}/${CI_PROJECT_PATH}.git"

auto-bump:
  extends: .auto-bump-template
  variables:
    GIT_USER_EMAIL: "ci-runner@icf.gob.hn"
    GIT_USER_NAME: "ICF CI Runner"
    DEFAULT_BRANCH: "main"

    # Bot user and token configuration for protected operations
    GIT_BOT_USER: "${CI_PROTECTED_BOT_USER}"
    GIT_TOKEN_VAR: "CI_PROTECTED_TOKEN"
    GIT_REPO_URL: "https://${CI_PROTECTED_BOT_USER}:${CI_PROTECTED_TOKEN}@${CI_SERVER_HOST}/${CI_PROJECT_PATH}.git"
  dependencies:
    - test:matrix

# Security jobs
code_quality:
  extends: default

sast:
  extends: default

secret_detection:
  extends: default
  image: registry.gitlab.com/security-products/secrets:7

# TEST JOBS (refactorizado para usar plantilla local)
test:matrix:
  extends:
    - .test-template
  parallel:
    matrix:
      - PYTHON_VERSION: "3.10"
      - PYTHON_VERSION: "3.11"
      - PYTHON_VERSION: "3.12"
      - PYTHON_VERSION: "3.13"

# DEPLOY JOB (refactorizado para usar plantilla local)
upload_twine:
  extends:
    - .deploy-template
  variables:
    GIT_USER_EMAIL: "ci-runner@icf.gob.hn"
    GIT_USER_NAME: "ICF CI Runner"
    DEFAULT_BRANCH: "main"
    GIT_BOT_USER: "${CI_PROTECTED_BOT_USER}"    # Set in GitLab CI/CD variables (e.g., "project_123_bot")
    GIT_TOKEN_VAR: "CI_PROTECTED_TOKEN"         # Protected token for main branch operations
    GIT_REPO_URL: "https://${CI_PROTECTED_BOT_USER}:${CI_PROTECTED_TOKEN}@${CI_SERVER_HOST}/${CI_PROJECT_PATH}.git"
    PACKAGE_NAME: "adef-tools"
    DIST_DIR: "dist"
    GITLAB_API: "https://git.icf.gob.hn/api/v4"
  dependencies:
    - test:matrix
  script:
    - uv pip install twine
    - uv build

    - TWINE_PASSWORD=${CI_JOB_TOKEN} TWINE_USERNAME=gitlab-ci-token twine upload --repository-url ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi dist/*

    - TWINE_USERNAME=${PYPI_USERNAME} TWINE_PASSWORD=${PYPI_PASSWORD} twine upload dist/*
  rules:
    - if: '$CI_COMMIT_TAG'
      when: always

sync_to_github:
  stage: deploy
  image: docker.io/python:3.13
  before_script:
    - curl -LsSf https://astral.sh/uv/install.sh | sh
    - export PATH="$HOME/.local/bin:$PATH"
    - uv venv
    - source .venv/bin/activate
    - uv pip install git-filter-repo
    - git config --global user.email "alopez@icf.gob.hn"
    - git config --global user.name "Luis Alfredo LÃ³pez Gonzales"
  script:
    - git clone --branch=main https://$CI_SERVER_HOST/$CI_PROJECT_PATH.git repo-filtered
    - cd repo-filtered
    - git filter-repo --path workflows/data/ --invert-paths
    - git remote add github https://${GITHUB_TOKEN}@github.com/lalgonzales/adef-tools.git
    - git push --force github main
  only:
    - main
